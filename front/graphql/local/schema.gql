schema {
  query: Query
  mutation: Mutation
}

type Query {
  # ユーザ情報
  user: User
  # 操作ステータス
  status: Status
  # 画面情報
  screen: Screen
  # 新規登録単語
  newwords: Newwords
}

type Mutation {
  # ユーザ情報を更新する
  updateUser(id: String!, username: String!): User
  # 画面パスを更新する
  updatePath(path: Int!): Screen
  # 画面パスを更新する
  updateSetId(id: String!): Status
  # # 新規単語をローカルに保存する
   # saveNewwords(words: RegistWordInput!): Newwords
   # # ローカルの新規単語リストをクリアする
  clearNewwords: Newwords
  # # ローカルの単語リストから単語を削除する
  removeWord(word: String!): Newwords
  # 学習リストをローカルに保存する
  saveWordList(list: [WordInput!]!): Boolean
  # 前の学習単語
  prevWord: Word
  # 次の学習単語
  nextWord: Word
  # テストリストをローカルに保存する
  saveTestList(list: [WordInput!]!): Boolean
  # 前のテスト単語
  prevTest: Word
  # 次のテスト単語
  nextTest: Word
}

input UserInput {
  id: ID!
  username: String
}

input WordInput {
  word: String
}

type Newwords {
  words: [String!]!
}

type User {
  id: ID!
  username: String
}

type Screen {
  path: Int!
}

type Status {
  setId: String
}

type Word {
  word: String
}
